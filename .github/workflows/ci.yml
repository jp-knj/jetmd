name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

env:
  CARGO_TERM_COLOR: always

jobs:
  rust:
    name: Rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      
      - name: Run tests
        run: cargo test --all-features --verbose
      
      - name: Build
        run: cargo build --release --verbose

  wasm:
    name: WASM Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      
      - name: Build WASM
        run: |
          cd crates/fmd-wasm
          wasm-pack build --target web --out-dir ../../packages/faster-md/wasm

  node:
    name: Node.js
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 21.x]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run Biome checks
        run: pnpm lint
      
      - name: Build packages
        run: pnpm build
      
      - name: Run tests
        run: pnpm test

  conformance:
    name: Conformance Tests
    runs-on: ubuntu-latest
    needs: [rust, wasm]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Run CommonMark tests
        run: cargo test --package fmd-core --test commonmark
        continue-on-error: true # Tests will fail until implementation
      
      - name: Run GFM tests
        run: cargo test --package fmd-gfm --test gfm
        continue-on-error: true # Tests will fail until implementation